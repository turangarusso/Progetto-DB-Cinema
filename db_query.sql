-- db per esempi di query SQL e Trigger
-- Corso di Basi di Dati


-- crea le tabelle

CREATE TABLE UTENTI(
 Username varchar2(20),
 Email varchar2(50) UNIQUE NOT NULL,
 Nome varchar2(50) NOT NULL,
 Cognome varchar2(50) NOT NULL,
 CONSTRAINT CK_UTENTI CHECK(LENGTH(Username)>3),
 CONSTRAINT PK_UTENTI PRIMARY KEY(Username)
)
STORAGE (INITIAL 171K NEXT 25K MINEXTENTS 1 MAXEXTENTS 5 
PCTINCREASE 0);

CREATE TABLE PRENOTAZIONI(
 Codice number(7),
 Data date NOT NULL,
 UserUtente varchar2(20),
 IdProgrammazione number(7),
 NumSala varchar2(2),
 IdCinema number(7),
 CONSTRAINT PK_PRENOTAZIONI PRIMARY KEY(Codice)
)
STORAGE (INITIAL 881 NEXT 221K MINEXTENTS 1 MAXEXTENTS 5 
PCTINCREASE 0);

CREATE TABLE POSTI(
 NumSala varchar2(2),
 IdCinema Number(7),
 Numero varchar2(2),
 Fila varchar2(1),
 CodPrenotazione number(7),
 CONSTRAINT PK_POSTI PRIMARY KEY(NumSala,IdCinema,Numero,Fila)
)
STORAGE (INITIAL 751k NEXT 181k MINEXTENTS 1 MAXEXTENTS 5 PCTINCREASE 0);

CREATE TABLE PROGRAMMAZIONI(
 Id number(7),
 Giorno date NOT NULL,
 Ora varchar2(5) NOT NULL,
 Prezzo varchar2(6) NOT NULL,
 IdFilm number(7),
 CONSTRAINT PK_PROGRAMMAZIONI PRIMARY KEY(Id)
)
STORAGE (INITIAL 4536k NEXT 1120k MINEXTENTS 1 MAXEXTENTS 5 PCTINCREASE 0);

CREATE TABLE FILM(
 Id number(7),
 Titolo varchar2(50) NOT NULL,
 Recensione varchar2(256),
 Paese varchar2(50),
 Genere varchar2(50) NOT NULL,
 Durata varchar2(10) NOT NULL,
 CONSTRAINT PK_FILM PRIMARY KEY(Id)
)
STORAGE (INITIAL 331k NEXT 67k MINEXTENTS 1 MAXEXTENTS 5 
PCTINCREASE 0);

CREATE TABLE ARTISTI(
 Codice number(7),
 Nome varchar2(50) NOT NULL,
 Cognome varchar2(50) NOT NULL,
 DataNascita date NOT NULL,
 LuogoNascita varchar2(50),
 CONSTRAINT PK_ARTISTI PRIMARY KEY(Codice)
)
STORAGE (INITIAL 4861k NEXT 1135k MINEXTENTS 1 MAXEXTENTS 5 PCTINCREASE 0);

CREATE TABLE CINEMA(
 Id number(7),
 Nome varchar2(50) NOT NULL,
 Citt√† varchar2(50) NOT NULL,
 NumSale varchar2(2),
 Via varchar2(50) NOT NULL,
 Civico varchar2(4) NOT NULL,
 Cap varchar2(5) NOT NULL,
 CONSTRAINT PK_CINEMA PRIMARY KEY(Id)
)
STORAGE (INITIAL 9k NEXT 3k MINEXTENTS 1 MAXEXTENTS 5 
PCTINCREASE 0);

CREATE TABLE TELEFONI(
Numero number(11),
IdCinema number(7),
CONSTRAINT PK_TELEFONI PRIMARY KEY(Numero)
)
STORAGE (INITIAL 2K NEXT 1K MINEXTENTS 1 MAXEXTENTS 5 
PCTINCREASE 0);

CREATE TABLE SALE(
Numero varchar2(2),
IdCinema number(7),
Capienza varchar2(3) NOT NULL,
Superficie varchar2(10) NOT NULL, 
IdProgrammazione number(7),
CONSTRAINT PK_SALE PRIMARY KEY(Numero,IdCinema)
)
STORAGE (INITIAL 8k NEXT 2k MINEXTENTS 1 MAXEXTENTS 5 
PCTINCREASE 0);

CREATE TABLE DIREZIONI(
IdFilm number(7),
CodArtisti numer(7),
CONSTRAINT PK_DIREZIONI PRIMARY KEY(IdFilm,CodArtisti) 
)
STORAGE (INITIAL 11k NEXT 3k MINEXTENTS 1 MAXEXTENTS 5 
PCTINCREASE 0);

CREATE TABLE RECITAZIONE(
IdFilm number(7),
CodArtisti numer(7),
CONSTRAINT PK_DIREZIONI PRIMARY KEY(IdFilm,CodArtisti) 
)
STORAGE (INITIAL 301k NEXT 71k MINEXTENTS 1 MAXEXTENTS 5
PCTINCREASE 0);

CREATE SEQUENCE codPre 
START WITH 1 
INCREMENT BY 1 
NOMAXVALUE 
NOCYCLE
;

CREATE SEQUENCE idPro
START WITH 1
INCREMENT BY 1
NOMAXVALUE 
NOCYCLE
;

CREATE SEQUENCE idFlm 
START WITH 1 
INCREMENT BY 1
NOMAXVALUE 
NOCYCLE
;

CREATE SEQUENCE codArt 
START WITH 1 
INCREMENT BY 1
NOMAXVALUE
NOCYCLE
;

CREATE SEQUENCE idCin 
START WITH 1 
INCREMENT BY 1
NOMAXVALUE 
NOCYCLE
;

ALTER SESSION SET NLS_DATE_FORMAT = 'DD-Mon-YYYY';

ALTER TABLE PRENOTAZIONI 
ADD CONSTRAINT FK_USER_PRE FOREIGN KEY (UserUtente)
REFERENCES UTENTI(Username)
ON DELETE CASCADE;

ALTER TABLE PRENOTAZIONI
ADD CONSTRAINT FK_PRO_PRE FOREIGN KEY (IdProgrammazione)
REFERENCES PROGRAMMAZIONI(Id)
ON DELETE CASCADE;

ALTER TABLE PRENOTAZIONI
ADD CONSTRAINT FK_SAL_PRE FOREIGN KEY (NumSala,IdCinema)
REFERENCES SALE(Numero,IdCinema)
ON DELETE CASCADE;

ALTER TABLE POSTI
ADD CONSTRAINT FK_SAL_POS FOREIGN KEY (NumSala,IdCinema)
REFERENCES SALE(Numero,IdCinema)
ON DELETE SET NULL;

ALTER TABLE POSTI
ADD CONSTRAINT FK_PRE_POS FOREIGN KEY (CodPrenotazione)
REFERENCES PRENOTAZIONI(Codice)
ON DELETE SET NULL;

ALTER TABLE PROGRAMMAZIONI
ADD CONSTRAINT FK_FLM_PRO FOREIGN KEY (IdFilm)
REFERENCES FILM(Id)
ON DELETE CASCADE;

ALTER TABLE TELEFONI
ADD CONSTRAINT FK_CIN_TEL FOREIGN KEY (IdCinema)
REFERENCES CINEMA(Id)
ON DELETE CASCADE;

ALTER TABLE SALE
ADD CONSTRAINT FK_CIN_SAL FOREIGN KEY (IdCinema)
REFERENCES CINEMA(Id)
ON DELETE CASCADE;

ALTER TABLE SALE
ADD CONSTRAINT FK_PRO_SAL FOREIGN KEY (IdProgrammazione)
REFERENCES PROGRAMMAZIONI(Id)
ON DELETE SET NULL;

ALTER TABLE DIREZIONI
ADD CONSTRAINT FK_FLM_DIR FOREIGN KEY (IdFilm)
REFERENCES FILM(Id)
ON DELETE CASCADE;

ALTER TABLE DIREZIONI
ADD CONSTRAINT FK_ART_DIR FOREIGN KEY (CodArtisti)
REFERENCES ARTISTI(Codice)
ON DELETE CASCADE;

ALTER TABLE RECITAZIONE 
ADD CONSTRAINT FK_FLM_REC FOREIGN KEY (IdFilm)
REFERENCES FILM(Id)
ON DELETE CASCADE;

ALTER TABLE RECITAZIONE
ADD CONSTRAINT FK_ART_REC FOREIGN KEY (CodArtisti)
REFERENCES ARTISTI(Codice)
ON DELETE CASCADE;

SELECT Titolo
FROM PROGRAMMAZIONI p join FILM f on p.IdFilm=f.Id 
WHERE GIORNO='13-OTT-2017' AND ORA = '21:30'

SELECT*
FROM PRENOTAZIONI
WHERE UserUtente='PAKY'


create or replace trigger prenotazione_bef_ins
before insert on Prenotazioni
for each row
DECLARE bool number (2);
errore_ins exception;
BEGIN
select count (*) into bool 
from POSTI 
where NumSala=:new.Numsala and CodPrenotazione IS NULL;
if bool<1 then raise errore_ins;
end if;
exception
when errore_ins then raise_application_error(-10001,'Posti esauriti');
END;
